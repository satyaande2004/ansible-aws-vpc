- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Import vpc_varaible
      include_vars: var/aws_vpc
    - name: creating VPC
      ec2_vpc_net:
          name: "{{vpc_name}}"
          cidr_block: "{{vpcCdir}}"
          region: "{{region}}"
          dns_support: yes
          dns_hostnames: yes
          state: "{{state}}"
          tenancy: default
      register: vpcout

    - debug:
           var: vpcout
    - name: crating Subnet1
      ec2_vpc_subnet:
          state: "{{state}}"
          vpc_id: "{{vpcout.vpc.id}}"
          region: "{{region}}"
          az: "{{zone1}}"
          cidr: "{{PubSub1Cdir}}"
          map_public: yes
          tags:
            Name: Aws_pubsunet1
      register: Aws_pubsunet1

    - name: crating Subnet2
      ec2_vpc_subnet:
            state: "{{state}}"
            vpc_id: "{{vpcout.vpc.id}}"
            region: "{{region}}"
            az: "{{zone2}}"
            cidr: "{{PubSub2Cdir}}"
            map_public: yes
            tags:
               Name: Aws_pubsunet2
      register: Aws_pubsunet2

    - name: crating Subnet3
      ec2_vpc_subnet:
            state: "{{state}}"
            vpc_id: "{{vpcout.vpc.id}}"
            region: "{{region}}"
            az: "{{zone3}}"
            cidr: "{{PubSub3Cdir}}"
            map_public: yes
            tags:
               Name: Aws_pubsunet3
      register: Aws_pubsunet3

    #private subnets


    - name: crating private Subnet4
      ec2_vpc_subnet:
              state: "{{state}}"
              vpc_id: "{{vpcout.vpc.id}}"
              region: "{{region}}"
              az: "{{zone1}}"
              cidr: "{{PrivSub4Cdir}}"
              map_public: yes
              tags:
                Name: Aws_privatesubenet4
      register: Aws_privatesubenet4

    - name: crating private Subnet5
      ec2_vpc_subnet:
                state: "{{state}}"
                vpc_id: "{{vpcout.vpc.id}}"
                region: "{{region}}"
                az: "{{zone2}}"
                cidr: "{{PrivSub5Cdir}}"
                map_public: yes
                tags:
                   Name: Aws_privatesubenet5
      register: Aws_privatesubenet5

    - name: crating private Subnet6
      ec2_vpc_subnet:
                state: "{{state}}"
                vpc_id: "{{vpcout.vpc.id}}"
                region: "{{region}}"
                az: "{{zone3}}"
                cidr: "{{PrivSub6Cdir}}"
                map_public: yes
                tags:
                   Name: Aws_privatesubenet6
      register: Aws_privatesubenet6
# internet gateway
    - name: crating internet Gatway for public subnets
      ec2_vpc_igw:
          state: "{{state}}"
          vpc_id: "{{vpcout.vpc.id}}"
          region: "{{region}}"
          tags:
              Name: Aws_IGW_public
      register:  Aws_IGW_public
  # Route table
    - name: Creating public Route table
      ec2_vpc_route_table:
          vpc_id: "{{vpcout.vpc.id}}"
          region: "{{region}}"
          tags:
            Name: Public_RT_table
          subnets:
            - "{{ Aws_pubsunet1.subnet.id }}"
            - "{{ Aws_pubsunet2.subnet.id }}"
            - "{{ Aws_pubsunet3.subnet.id }}"
          routes:
            - dest: 0.0.0.0/0
              gateway_id: "{{ Aws_IGW_public.gateway_id }}"
      register: Public_RT_table

 # create new NAT gateway if it is not exit
    - name: Creating NAT Gateway if it is not exit
      ec2_vpc_nat_gateway:
          state: "{{state}}"
          subnet_id: "{{Aws_pubsunet1.subnet.id}}"
          wait: yes
          region: "{{region}}"
          if_exist_do_not_create: true
      register: new_nat_gateway
  # create private routetable and attach NAT gatway

    - name: attch private subnets to nat gateway
      ec2_vpc_route_table:
               vpc_id: "{{vpcout.vpc.id}}"
               region: "{{region}}"
               tags:
                 Name: Private_RT_table
               subnets:
                 - "{{ Aws_privatesubenet4.subnet.id }}"
                 - "{{ Aws_privatesubenet5.subnet.id }}"
                 - "{{ Aws_privatesubenet6.subnet.id }}"
               routes:
                 - dest: 0.0.0.0/0
                   gateway_id: "{{ new_nat_gateway.nat_gateway_id }}"
      register: Private_RT_table

    - set_fact:
        vpcid: "{{vpcout.vpc.id}}"
        Aws_pubsunet1: "{{ Aws_pubsunet1.subnet.id }}"
        Aws_pubsunet2: "{{ Aws_pubsunet2.subnet.id }}"
        Aws_pubsunet3: "{{ Aws_pubsunet3.subnet.id }}"
        Aws_privatesubenet4: "{{ Aws_privatesubenet4.subnet.id }}"
        Aws_privatesubenet5: "{{ Aws_privatesubenet5.subnet.id }}"
        Aws_privatesubenet6: "{{ Aws_privatesubenet6.subnet.id }}"
        Aws_IGW_public.gateway: "{{ Aws_IGW_public.gateway_id }}"
        Public_RT_table: "{{Public_RT_table.route_table.id }}"
        AWS_IGW_private.gateway: "{{ new_nat_gateway.nat_gateway_id }}"
        Private_RT_table: "{{Private_RT_table.route_table.id }}"
        cacheable: yes







